"""change user to username

Revision ID: 10adfb4dd208
Revises: 6b297a302b01
Create Date: 2023-03-30 08:23:55.297018

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '10adfb4dd208'
down_revision = '6b297a302b01'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('word_multiple_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('word_id', sa.Integer(), nullable=False),
    sa.Column('openai_output', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['word_id'], ['word.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('app_user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=True))
        batch_op.drop_constraint('app_user_name_key', type_='unique')
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('app_user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('app_user_name_key', ['name'])
        batch_op.drop_column('username')

    op.drop_table('word_multiple_options')
    # ### end Alembic commands ###
